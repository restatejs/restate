{"version":3,"file":"vue.js","mappings":"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","sources":["webpack://Restate.[name]/webpack/universalModuleDefinition","webpack://Restate.[name]/./src/Restate.ts","webpack://Restate.[name]/./src/createRestate.ts","webpack://Restate.[name]/./src/implementations/httpClient/axios/AxiosHttpClient.ts","webpack://Restate.[name]/./src/implementations/store/vue/VueStore.ts","webpack://Restate.[name]/./src/implementations/store/vue/VueStoreResource.ts","webpack://Restate.[name]/./src/models/BaseModel.ts","webpack://Restate.[name]/./src/models/CoreModel.ts","webpack://Restate.[name]/./src/plugins/vue/VuePlugin.ts","webpack://Restate.[name]/./src/plugins/vue/index.ts","webpack://Restate.[name]/./src/plugins/vue/provider.ts","webpack://Restate.[name]/external commonjs \"axios\"","webpack://Restate.[name]/external commonjs \"tslib\"","webpack://Restate.[name]/external commonjs \"vue\"","webpack://Restate.[name]/webpack/bootstrap","webpack://Restate.[name]/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Restate\"] = factory();\n\telse\n\t\troot[\"Restate\"] = root[\"Restate\"] || {}, root[\"Restate\"][\"vue\"] = factory();\n})(this, function() {\nreturn ","import { IStore, IHTTPClient } from \"types\";\n\nimport { CoreModel } from \"./models/CoreModel\";\n\nclass Restate {\n  private $models: Map<string, CoreModel> = new Map();\n\n  constructor(public httpClient: IHTTPClient, public store: IStore) {}\n\n  public get(resourceName: string): CoreModel | undefined {\n    return this.$models.get(resourceName);\n  }\n\n  public entries(): IterableIterator<[string, CoreModel]> {\n    return this.$models.entries();\n  }\n\n  public set(resourceName: string, model: CoreModel): this {\n    this.$models.set(resourceName, model);\n\n    return this;\n  }\n\n  public has(resourceName: string): boolean {\n    return this.$models.has(resourceName);\n  }\n\n  public delete(resourceName: string): boolean {\n    return this.$models.delete(resourceName);\n  }\n\n  public clear(): void {\n    return this.$models.clear();\n  }\n}\n\nexport { Restate };\n","import { IStore, IHTTPClient } from \"types\";\n\nimport { Restate } from \"@/Restate\";\n\nexport const $restate: { instance?: Restate } = {};\n\nexport function createRestate(provider: {\n  httpClient: IHTTPClient;\n  store: IStore;\n}): Restate {\n  $restate.instance = new Restate(provider.httpClient, provider.store);\n\n  return $restate.instance;\n}\n","import { IHTTPClient, IHTTPClienteRequestBody } from \"types\";\n\nimport { Axios } from \"axios\";\n\nclass AxiosHTTPClient implements IHTTPClient {\n  constructor(private axios: Axios) {}\n\n  async get<R>(url: string): Promise<R> {\n    const response = await this.axios.get<R>(url);\n\n    return response.data;\n  }\n\n  async post<R>(url: string, body: IHTTPClienteRequestBody): Promise<R> {\n    const response = await this.axios.post<R>(url, body);\n\n    return response.data;\n  }\n\n  async put(url: string, body: IHTTPClienteRequestBody): Promise<void> {\n    await this.axios.put(url, body);\n  }\n\n  async delete(url: string): Promise<void> {\n    await this.axios.delete(url);\n  }\n}\n\nexport { AxiosHTTPClient };\n","import { RestateStore, IStore } from \"types\";\n\nimport { reactive } from \"vue\";\n\nimport { VueStoreResource } from \"./VueStoreResource\";\n\nclass VueStore implements IStore<VueStoreResource<object>> {\n  private resources = new Map();\n\n  private store: RestateStore;\n\n  constructor() {\n    this.store = reactive({});\n  }\n\n  get<RI extends object>(\n    resourceName: string\n  ): VueStoreResource<RI> | undefined {\n    const resource = this.resources.get(resourceName);\n\n    return resource;\n  }\n\n  add<RI extends object>(resourceName: string): VueStoreResource<RI> {\n    const resource = new VueStoreResource<RI>(resourceName, this.store);\n\n    this.resources.set(resourceName, resource);\n\n    return resource;\n  }\n\n  has(resourceName: string): boolean {\n    return this.resources.has(resourceName);\n  }\n\n  delete(resourceName: string): boolean {\n    delete this.store[resourceName];\n\n    return this.resources.delete(resourceName);\n  }\n\n  clear(): void {\n    Object.keys(this.store).forEach(\n      (resourceName) => delete this.store[resourceName]\n    );\n\n    this.resources.clear();\n  }\n}\n\nexport { VueStore };\n","import { ResourceState, RestateStore, IPK, IResource } from \"types\";\n\nclass VueStoreResource<RI extends object> implements IResource<RI> {\n  private state: ResourceState<RI>;\n\n  constructor(private resourceName: string, private store: RestateStore) {\n    if (!(resourceName in store)) {\n      store[resourceName] = {\n        data: {},\n      };\n    }\n\n    this.state = store[resourceName];\n  }\n\n  get(id: IPK): RI | undefined {\n    return this.state.data[id];\n  }\n\n  getAll(): RI[] {\n    const all = Object.values(this.state.data);\n\n    return all as RI[];\n  }\n\n  set(id: IPK, data: RI): this {\n    this.state.data[id] = data;\n\n    return this;\n  }\n\n  setProperty(id: IPK, prop: string, value: string | number): this {\n    const item = this.state.data[id];\n\n    if (item) {\n      Reflect.set(item, prop, value);\n    }\n\n    return this;\n  }\n\n  has(id: IPK): boolean {\n    return id in this.state.data;\n  }\n\n  delete(id: IPK): void {\n    delete this.state.data[id];\n  }\n\n  clear(): void {\n    this.state.data = {};\n  }\n}\n\nexport { VueStoreResource };\n","import {\n  IndexOptions,\n  IPK,\n  ShowOptions,\n  StoreOptions,\n  UpdateOptions,\n  DestroyOptions,\n} from \"types\";\n\nimport Restate from \"..\";\n\nimport { CoreModel } from \"./CoreModel\";\n\nfunction createURL(\n  pattern: string,\n  params: Record<string, string | number>,\n  query?: Record<string, string | number>\n): string {\n  const regExp = /(\\/:\\w+)/g;\n\n  let url = pattern.replace(regExp, (match) => {\n    const paramKey = match.slice(2);\n\n    if (!params[paramKey]) {\n      throw new Error();\n    }\n\n    return `/${params[paramKey]}`;\n  });\n\n  if (query) {\n    url += `?${new URLSearchParams(query as Record<string, string>)}`;\n  }\n\n  return url;\n}\n\nclass BaseModel<RI> extends CoreModel<RI> {\n  public $pk = \"id\";\n\n  constructor(public $resourceName: string, public $restate: Restate) {\n    super($resourceName, $restate);\n  }\n\n  public async index(options?: IndexOptions): Promise<RI[]> {\n    const url = createURL(\n      \"/:resourceName\",\n      { resourceName: this.$resourceName },\n      options?.query\n    );\n\n    const reponseData = await this.$httpClient.get<RI[]>(url);\n\n    if (options?.merge !== true) {\n      this.$resource.clear();\n    }\n\n    reponseData.forEach((item: any) =>\n      this.$resource.set(item[this.$pk], item)\n    );\n\n    return this.$resource.getAll();\n  }\n\n  public async show(id: IPK, options?: ShowOptions): Promise<RI | undefined> {\n    const url = createURL(\n      \"/:resourceName/:id\",\n      { resourceName: this.$resourceName, id },\n      options?.query\n    );\n\n    const reponseData = await this.$httpClient.get<RI>(url);\n\n    this.$resource.set((reponseData as any)[this.$pk], reponseData);\n\n    return this.$resource.get(id);\n  }\n\n  public async store(\n    data: Partial<RI>,\n    options?: StoreOptions\n  ): Promise<boolean> {\n    const url = createURL(\n      \"/:resourceName\",\n      { resourceName: this.$resourceName },\n      options?.query\n    );\n\n    const reponseData = await this.$httpClient.post<RI>(url, data);\n\n    this.$resource.set((reponseData as any)[this.$pk], reponseData);\n\n    return true;\n  }\n\n  public async update(\n    id: IPK,\n    data: Partial<RI>,\n    options?: UpdateOptions\n  ): Promise<boolean> {\n    const url = createURL(\n      \"/:resourceName/:id\",\n      { resourceName: this.$resourceName, id },\n      options?.query\n    );\n\n    await this.$httpClient.put(url, data);\n\n    Object.entries(data).forEach(([key, val]) =>\n      this.$resource.setProperty(id, key, val)\n    );\n\n    return true;\n  }\n\n  public async destroy(id: IPK, options?: DestroyOptions): Promise<boolean> {\n    const url = createURL(\n      \"/:resourceName/:id\",\n      { resourceName: this.$resourceName, id },\n      options?.query\n    );\n\n    await this.$httpClient.delete(url);\n\n    this.$resource.delete(id);\n\n    return true;\n  }\n}\n\nexport { BaseModel };\n","import { IHTTPClient, IResource } from \"types\";\n\nimport Restate from \"..\";\n\nclass CoreModel<RI = any> {\n  public $resource: IResource<RI>;\n\n  public $httpClient: IHTTPClient;\n\n  constructor(public $resourceName: string, public $restate: Restate) {\n    if ($restate.has($resourceName)) {\n      throw new Error(\n        `RESTATE ERROR: there is already a Model that the resource name is '${$resourceName}'`\n      );\n    }\n\n    $restate.set($resourceName, this);\n\n    this.$httpClient = $restate.httpClient;\n\n    if (!this.$restate.store.has($resourceName)) {\n      this.$resource = this.$restate.store.add<RI>($resourceName);\n    } else {\n      this.$resource = this.$restate.store.get<RI>($resourceName);\n    }\n  }\n}\n\nexport { CoreModel };\n","import { $restate, createRestate } from \"@/createRestate\";\nimport { BaseModel } from \"@/models/BaseModel\";\nimport { Restate } from \"@/Restate\";\n\nimport { provider } from \"./provider\";\n\nexport function useRestate<RI = any>(resourceName: string): BaseModel<RI> {\n  if (!$restate.instance) {\n    createRestate(provider);\n  }\n\n  const restate = $restate.instance as Restate;\n\n  let model = restate.get(resourceName) as BaseModel<RI>;\n\n  if (!model) {\n    model = new BaseModel(resourceName, restate);\n\n    restate.set(resourceName, model);\n  }\n\n  return model;\n}\n","export * from \"./VuePlugin\";\n","import axios from \"axios\";\n\nimport { AxiosHTTPClient } from \"@/implementations/httpClient/axios/AxiosHttpClient\";\nimport { VueStore } from \"@/implementations/store/vue/VueStore\";\n\nconst axiosHttpClient = new AxiosHTTPClient(axios);\nconst vueStore = new VueStore();\n\nexport const provider = {\n  httpClient: axiosHttpClient,\n  store: vueStore,\n};\n","module.exports = require(\"axios\");","module.exports = require(\"tslib\");","module.exports = require(\"vue\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(27);\n"],"names":["root","factory","exports","module","define","amd","this","Restate","constructor","httpClient","store","$models","Map","get","resourceName","entries","set","model","has","delete","clear","$restate","provider","instance","AxiosHTTPClient","axios","async","url","data","body","post","put","VueStore","resources","reactive","add","resource","VueStoreResource","Object","keys","forEach","state","id","getAll","values","setProperty","prop","value","item","Reflect","createURL","pattern","params","query","replace","match","paramKey","slice","Error","URLSearchParams","BaseModel","CoreModel","$resourceName","super","$pk","options","reponseData","$httpClient","merge","$resource","key","val","createRestate","restate","axiosHttpClient","vueStore","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}