{"version":3,"file":"main.js","mappings":"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","sources":["webpack://Restate.[name]/webpack/universalModuleDefinition","webpack://Restate.[name]/./src/Restate.ts","webpack://Restate.[name]/./src/createRestate.ts","webpack://Restate.[name]/./src/index.ts","webpack://Restate.[name]/./src/models/BaseModel.ts","webpack://Restate.[name]/./src/models/CoreModel.ts","webpack://Restate.[name]/external commonjs \"tslib\"","webpack://Restate.[name]/webpack/bootstrap","webpack://Restate.[name]/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Restate\"] = factory();\n\telse\n\t\troot[\"Restate\"] = root[\"Restate\"] || {}, root[\"Restate\"][\"main\"] = factory();\n})(this, function() {\nreturn ","import { IStore, IHTTPClient } from \"types\";\n\nimport { CoreModel } from \"./models/CoreModel\";\n\nclass Restate {\n  private $models: Map<string, CoreModel> = new Map();\n\n  constructor(public httpClient: IHTTPClient, public store: IStore) {}\n\n  public get(resourceName: string): CoreModel | undefined {\n    return this.$models.get(resourceName);\n  }\n\n  public entries(): IterableIterator<[string, CoreModel]> {\n    return this.$models.entries();\n  }\n\n  public set(resourceName: string, model: CoreModel): this {\n    this.$models.set(resourceName, model);\n\n    return this;\n  }\n\n  public has(resourceName: string): boolean {\n    return this.$models.has(resourceName);\n  }\n\n  public delete(resourceName: string): boolean {\n    return this.$models.delete(resourceName);\n  }\n\n  public clear(): void {\n    return this.$models.clear();\n  }\n}\n\nexport { Restate };\n","import { IStore, IHTTPClient } from \"types\";\n\nimport { Restate } from \"@/Restate\";\n\nexport const $restate: { instance?: Restate } = {};\n\nexport function createRestate(provider: {\n  httpClient: IHTTPClient;\n  store: IStore;\n}): Restate {\n  $restate.instance = new Restate(provider.httpClient, provider.store);\n\n  return $restate.instance;\n}\n","import { Restate } from \"./Restate\";\n\nexport * from \"./Restate\";\n\nexport * from \"./createRestate\";\n\nexport * from \"./models/CoreModel\";\nexport * from \"./models/BaseModel\";\n\nexport default Restate;\n","import {\n  IndexOptions,\n  IPK,\n  ShowOptions,\n  StoreOptions,\n  UpdateOptions,\n  DestroyOptions,\n} from \"types\";\n\nimport Restate from \"..\";\n\nimport { CoreModel } from \"./CoreModel\";\n\nfunction createURL(\n  pattern: string,\n  params: Record<string, string | number>,\n  query?: Record<string, string | number>\n): string {\n  const regExp = /(\\/:\\w+)/g;\n\n  let url = pattern.replace(regExp, (match) => {\n    const paramKey = match.slice(2);\n\n    if (!params[paramKey]) {\n      throw new Error();\n    }\n\n    return `/${params[paramKey]}`;\n  });\n\n  if (query) {\n    url += `?${new URLSearchParams(query as Record<string, string>)}`;\n  }\n\n  return url;\n}\n\nclass BaseModel<RI> extends CoreModel<RI> {\n  public $pk = \"id\";\n\n  constructor(public $resourceName: string, public $restate: Restate) {\n    super($resourceName, $restate);\n  }\n\n  public async index(options?: IndexOptions): Promise<RI[]> {\n    const url = createURL(\n      \"/:resourceName\",\n      { resourceName: this.$resourceName },\n      options?.query\n    );\n\n    const reponseData = await this.$httpClient.get<RI[]>(url);\n\n    if (options?.merge !== true) {\n      this.$resource.clear();\n    }\n\n    reponseData.forEach((item: any) =>\n      this.$resource.set(item[this.$pk], item)\n    );\n\n    return this.$resource.getAll();\n  }\n\n  public async show(id: IPK, options?: ShowOptions): Promise<RI | undefined> {\n    const url = createURL(\n      \"/:resourceName/:id\",\n      { resourceName: this.$resourceName, id },\n      options?.query\n    );\n\n    const reponseData = await this.$httpClient.get<RI>(url);\n\n    this.$resource.set((reponseData as any)[this.$pk], reponseData);\n\n    return this.$resource.get(id);\n  }\n\n  public async store(\n    data: Partial<RI>,\n    options?: StoreOptions\n  ): Promise<boolean> {\n    const url = createURL(\n      \"/:resourceName\",\n      { resourceName: this.$resourceName },\n      options?.query\n    );\n\n    const reponseData = await this.$httpClient.post<RI>(url, data);\n\n    this.$resource.set((reponseData as any)[this.$pk], reponseData);\n\n    return true;\n  }\n\n  public async update(\n    id: IPK,\n    data: Partial<RI>,\n    options?: UpdateOptions\n  ): Promise<boolean> {\n    const url = createURL(\n      \"/:resourceName/:id\",\n      { resourceName: this.$resourceName, id },\n      options?.query\n    );\n\n    await this.$httpClient.put(url, data);\n\n    Object.entries(data).forEach(([key, val]) =>\n      this.$resource.setProperty(id, key, val)\n    );\n\n    return true;\n  }\n\n  public async destroy(id: IPK, options?: DestroyOptions): Promise<boolean> {\n    const url = createURL(\n      \"/:resourceName/:id\",\n      { resourceName: this.$resourceName, id },\n      options?.query\n    );\n\n    await this.$httpClient.delete(url);\n\n    this.$resource.delete(id);\n\n    return true;\n  }\n}\n\nexport { BaseModel };\n","import { IHTTPClient, IResource } from \"types\";\n\nimport Restate from \"..\";\n\nclass CoreModel<RI = any> {\n  public $resource: IResource<RI>;\n\n  public $httpClient: IHTTPClient;\n\n  constructor(public $resourceName: string, public $restate: Restate) {\n    if ($restate.has($resourceName)) {\n      throw new Error(\n        `RESTATE ERROR: there is already a Model that the resource name is '${$resourceName}'`\n      );\n    }\n\n    $restate.set($resourceName, this);\n\n    this.$httpClient = $restate.httpClient;\n\n    if (!this.$restate.store.has($resourceName)) {\n      this.$resource = this.$restate.store.add<RI>($resourceName);\n    } else {\n      this.$resource = this.$restate.store.get<RI>($resourceName);\n    }\n  }\n}\n\nexport { CoreModel };\n","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"names":["root","factory","exports","module","define","amd","this","Restate","constructor","httpClient","store","$models","Map","get","resourceName","entries","set","model","has","delete","clear","$restate","provider","instance","createURL","pattern","params","query","url","replace","match","paramKey","slice","Error","URLSearchParams","BaseModel","CoreModel","$resourceName","super","$pk","async","options","reponseData","$httpClient","merge","$resource","forEach","item","getAll","id","data","post","put","Object","key","val","setProperty","add","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}